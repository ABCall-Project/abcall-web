name: Merge to main
on:
    pull_request:
      types:
        - closed
jobs:
  tests:
    name: Tests
    if: success() && github.event.pull_request.merged == true && github.head_ref == 'develop'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: |
        npm install
        npm install -g @angular/cli
    - name: Running test 🧪
      run: |
        npm run test:ci
    - name: Validate results with errors
      if: ${{ failure() }}
      env:
          ERROR_MESSAGE: One or various test failed 🔴
      run: echo "::set-output name=answer::${ERROR_MESSAGE}"
    - name: Validate result without errors
      if: ${{ success() }}
      env:
          MESSAGE_SUCCESS: All the tests were success
      run: echo "::set-output name=answer::${MESSAGE_SUCCESS}"
    - name: Coverage calculation 📊
      id: Coverage
      run: |
          npm run test:coverage:ci


  deploy:
    name: Deploy 🚀
    environment: production
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set environment variables
        env:
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
          ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
        run: |
          echo "Environment variables are set"
      - name: Log in to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ secrets.ACR_LOGIN_SERVER }} \
          -u ${{ secrets.ACR_USERNAME }} --password-stdin
      - name: Build and push Docker image 🐳 ⚙️
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/abcall-web:build-$GITHUB_RUN_NUMBER .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/abcall-web:build-$GITHUB_RUN_NUMBER
      - name: Set AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name abcall-cluster-east-us
      - name: Deploy to AKS 🚀
        run: |
          sed "s/{{IMAGE_TAG}}/build-${GITHUB_RUN_NUMBER}/g" ./kubernetes/k8s-deployment.tmpl > kubernetes/new-k8s-deployment.yaml
          kubectl apply -f kubernetes/k8s-configMap.yaml
          kubectl apply -f kubernetes/new-k8s-deployment.yaml
          kubectl apply -f kubernetes/nginx-configuration.yaml
          kubectl apply -f kubernetes/k8s-ingress.yaml
          kubectl apply -f kubernetes/k8s-ingress-controller.yaml
          kubectl get pods -n ingress-nginx

